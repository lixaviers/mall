<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.mall.user.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.suyan.mall.user.model.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="unique_user_id" jdbcType="VARCHAR" property="uniqueUserId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="user_pwd" jdbcType="VARCHAR" property="userPwd"/>
        <result column="user_source" jdbcType="TINYINT" property="userSource"/>
        <result column="user_status" jdbcType="TINYINT" property="userStatus"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, unique_user_id, user_name, nick_name, mobile, email, user_pwd, user_source, user_status, 
    remark, create_user, create_user_name, create_time, update_time, is_deleted
  </sql>
    <select id="selectByExample" parameterType="com.suyan.mall.user.model.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.suyan.mall.user.model.UserExample">
        delete from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.suyan.mall.user.model.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into tb_user (unique_user_id, user_name, nick_name,
        mobile, email, user_pwd,
        user_source, user_status, remark,
        create_user, create_user_name, create_time,
        update_time, is_deleted)
        values (#{uniqueUserId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR},
        #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
        #{userSource,jdbcType=TINYINT}, #{userStatus,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR},
        #{createUser,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.suyan.mall.user.model.User">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uniqueUserId != null">
                unique_user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="userPwd != null">
                user_pwd,
            </if>
            <if test="userSource != null">
                user_source,
            </if>
            <if test="userStatus != null">
                user_status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createUserName != null">
                create_user_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uniqueUserId != null">
                #{uniqueUserId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="userPwd != null">
                #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="userSource != null">
                #{userSource,jdbcType=TINYINT},
            </if>
            <if test="userStatus != null">
                #{userStatus,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.suyan.mall.user.model.UserExample" resultType="java.lang.Long">
        select count(*) from tb_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.uniqueUserId != null">
                unique_user_id = #{record.uniqueUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.userPwd != null">
                user_pwd = #{record.userPwd,jdbcType=VARCHAR},
            </if>
            <if test="record.userSource != null">
                user_source = #{record.userSource,jdbcType=TINYINT},
            </if>
            <if test="record.userStatus != null">
                user_status = #{record.userStatus,jdbcType=TINYINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createUserName != null">
                create_user_name = #{record.createUserName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_user
        set id = #{record.id,jdbcType=BIGINT},
        unique_user_id = #{record.uniqueUserId,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
        user_source = #{record.userSource,jdbcType=TINYINT},
        user_status = #{record.userStatus,jdbcType=TINYINT},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_deleted = #{record.isDeleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.suyan.mall.user.model.User">
        update tb_user
        <set>
            <if test="uniqueUserId != null">
                unique_user_id = #{uniqueUserId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="userPwd != null">
                user_pwd = #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="userSource != null">
                user_source = #{userSource,jdbcType=TINYINT},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus,jdbcType=TINYINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                create_user_name = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.suyan.mall.user.model.User">
    update tb_user
    set unique_user_id = #{uniqueUserId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      user_source = #{userSource,jdbcType=TINYINT},
      user_status = #{userStatus,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tb_user
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user
        WHERE id = #{id,jdbcType=BIGINT}
        AND is_deleted=0
        FOR UPDATE
    </select>

    <select id="queryUser" resultMap="BaseResultMap" parameterType="com.suyan.mall.user.req.UserQueryDTO">
        SELECT
        <choose>
            <when test="returnFields!=null">${returnFields}</when>
            <otherwise>
                <include refid="Base_Column_List"/>
            </otherwise>
        </choose>
        FROM tb_user
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">
                    #{item,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="uniqueUserId!=null and uniqueUserId!=''">AND unique_user_id = #{uniqueUserId,jdbcType=VARCHAR}
            </if>
            <if test="uniqueUserIdLike != null and uniqueUserIdLike != '' ">AND unique_user_id LIKE
                concat(#{uniqueUserIdLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="uniqueUserIdList != null and uniqueUserIdList.size > 0">
                <foreach item="item" separator="," open="AND unique_user_id in (" close=")"
                         collection="uniqueUserIdList">#{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="userName!=null and userName!=''">AND user_name = #{userName,jdbcType=VARCHAR}</if>
            <if test="userNameLike != null and userNameLike != '' ">AND user_name LIKE
                concat(#{userNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="userNameList != null and userNameList.size > 0">
                <foreach item="item" separator="," open="AND user_name in (" close=")" collection="userNameList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="nickName!=null and nickName!=''">AND nick_name = #{nickName,jdbcType=VARCHAR}</if>
            <if test="nickNameLike != null and nickNameLike != '' ">AND nick_name LIKE
                concat(#{nickNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="nickNameList != null and nickNameList.size > 0">
                <foreach item="item" separator="," open="AND nick_name in (" close=")" collection="nickNameList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="mobile!=null and mobile!=''">AND mobile = #{mobile,jdbcType=VARCHAR}</if>
            <if test="mobileLike != null and mobileLike != '' ">AND mobile LIKE
                concat(#{mobileLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="mobileList != null and mobileList.size > 0">
                <foreach item="item" separator="," open="AND mobile in (" close=")" collection="mobileList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="email!=null and email!=''">AND email = #{email,jdbcType=VARCHAR}</if>
            <if test="emailLike != null and emailLike != '' ">AND email LIKE concat(#{emailLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="emailList != null and emailList.size > 0">
                <foreach item="item" separator="," open="AND email in (" close=")" collection="emailList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="userPwd!=null and userPwd!=''">AND user_pwd = #{userPwd,jdbcType=VARCHAR}</if>
            <if test="userPwdLike != null and userPwdLike != '' ">AND user_pwd LIKE
                concat(#{userPwdLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="userPwdList != null and userPwdList.size > 0">
                <foreach item="item" separator="," open="AND user_pwd in (" close=")" collection="userPwdList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="userSource!=null">AND user_source = #{userSource,jdbcType=TINYINT}</if>
            <if test="userSourceList != null and userSourceList.size > 0">
                <foreach item="item" separator="," open="AND user_source in (" close=")" collection="userSourceList">
                    #{item,jdbcType=TINYINT}
                </foreach>
            </if>
            <if test="userStatus!=null">AND user_status = #{userStatus,jdbcType=TINYINT}</if>
            <if test="userStatusList != null and userStatusList.size > 0">
                <foreach item="item" separator="," open="AND user_status in (" close=")" collection="userStatusList">
                    #{item,jdbcType=TINYINT}
                </foreach>
            </if>
            <if test="createUser!=null and createUser!=''">AND create_user = #{createUser,jdbcType=VARCHAR}</if>
            <if test="createUserLike != null and createUserLike != '' ">AND create_user LIKE
                concat(#{createUserLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="createUserList != null and createUserList.size > 0">
                <foreach item="item" separator="," open="AND create_user in (" close=")" collection="createUserList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="createUserName!=null and createUserName!=''">AND create_user_name =
                #{createUserName,jdbcType=VARCHAR}
            </if>
            <if test="createUserNameLike != null and createUserNameLike != '' ">AND create_user_name LIKE
                concat(#{createUserNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="createUserNameList != null and createUserNameList.size > 0">
                <foreach item="item" separator="," open="AND create_user_name in (" close=")"
                         collection="createUserNameList">#{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">
                    #{item,jdbcType=BOOLEAN}
                </foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into tb_user (
        unique_user_id,
        user_name,
        nick_name,
        mobile,
        email,
        user_pwd,
        user_source,
        user_status,
        remark,
        create_user,
        create_user_name
        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
            (
            #{bean.uniqueUserId,jdbcType=VARCHAR} ,
            #{bean.userName,jdbcType=VARCHAR} ,
            #{bean.nickName,jdbcType=VARCHAR} ,
            #{bean.mobile,jdbcType=VARCHAR} ,
            #{bean.email,jdbcType=VARCHAR} ,
            #{bean.userPwd,jdbcType=VARCHAR} ,
            #{bean.userSource,jdbcType=TINYINT} ,
            #{bean.userStatus,jdbcType=TINYINT} ,
            #{bean.remark,jdbcType=VARCHAR} ,
            #{bean.createUser,jdbcType=VARCHAR} ,
            #{bean.createUserName,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="selectByUniqueUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user
        WHERE unique_user_id = #{uniqueUserId,jdbcType=VARCHAR}
        AND is_deleted = 0
    </select>
    <select id="selectByUserName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM tb_user
        WHERE user_name = #{userName,jdbcType=VARCHAR}
        AND is_deleted = 0
    </select>

</mapper>