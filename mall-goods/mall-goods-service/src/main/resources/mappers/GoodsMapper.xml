<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.mall.goods.dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.suyan.mall.goods.model.Goods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_category_id" jdbcType="INTEGER" property="goodsCategoryId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="is_more_spec" jdbcType="BIT" property="isMoreSpec" />
    <result column="spec_value" jdbcType="VARCHAR" property="specValue" />
    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
    <result column="list_price" jdbcType="DECIMAL" property="listPrice" />
    <result column="minimum_quantity" jdbcType="INTEGER" property="minimumQuantity" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="express_freight" jdbcType="DECIMAL" property="expressFreight" />
    <result column="picture_urls" jdbcType="VARCHAR" property="pictureUrls" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="per_person_limit" jdbcType="INTEGER" property="perPersonLimit" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="goods_status" jdbcType="TINYINT" property="goodsStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, shop_id, goods_name, goods_category_id, brand_id, is_more_spec, spec_value, original_price, 
    list_price, minimum_quantity, inventory, express_freight, picture_urls, sales, per_person_limit, 
    view_count, goods_status, create_time, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.suyan.mall.goods.model.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.suyan.mall.goods.model.GoodsExample">
    delete from tb_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyan.mall.goods.model.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods (shop_id, goods_name, goods_category_id, 
      brand_id, is_more_spec, spec_value, 
      original_price, list_price, minimum_quantity, 
      inventory, express_freight, picture_urls, 
      sales, per_person_limit, view_count, 
      goods_status, create_time, update_time, 
      is_deleted)
    values (#{shopId,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsCategoryId,jdbcType=INTEGER}, 
      #{brandId,jdbcType=INTEGER}, #{isMoreSpec,jdbcType=BIT}, #{specValue,jdbcType=VARCHAR}, 
      #{originalPrice,jdbcType=DECIMAL}, #{listPrice,jdbcType=DECIMAL}, #{minimumQuantity,jdbcType=INTEGER}, 
      #{inventory,jdbcType=INTEGER}, #{expressFreight,jdbcType=DECIMAL}, #{pictureUrls,jdbcType=VARCHAR}, 
      #{sales,jdbcType=INTEGER}, #{perPersonLimit,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, 
      #{goodsStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.suyan.mall.goods.model.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsCategoryId != null">
        goods_category_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="isMoreSpec != null">
        is_more_spec,
      </if>
      <if test="specValue != null">
        spec_value,
      </if>
      <if test="originalPrice != null">
        original_price,
      </if>
      <if test="listPrice != null">
        list_price,
      </if>
      <if test="minimumQuantity != null">
        minimum_quantity,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="expressFreight != null">
        express_freight,
      </if>
      <if test="pictureUrls != null">
        picture_urls,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="perPersonLimit != null">
        per_person_limit,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCategoryId != null">
        #{goodsCategoryId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="isMoreSpec != null">
        #{isMoreSpec,jdbcType=BIT},
      </if>
      <if test="specValue != null">
        #{specValue,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="listPrice != null">
        #{listPrice,jdbcType=DECIMAL},
      </if>
      <if test="minimumQuantity != null">
        #{minimumQuantity,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="expressFreight != null">
        #{expressFreight,jdbcType=DECIMAL},
      </if>
      <if test="pictureUrls != null">
        #{pictureUrls,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="perPersonLimit != null">
        #{perPersonLimit,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyan.mall.goods.model.GoodsExample" resultType="java.lang.Long">
    select count(*) from tb_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCategoryId != null">
        goods_category_id = #{record.goodsCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.isMoreSpec != null">
        is_more_spec = #{record.isMoreSpec,jdbcType=BIT},
      </if>
      <if test="record.specValue != null">
        spec_value = #{record.specValue,jdbcType=VARCHAR},
      </if>
      <if test="record.originalPrice != null">
        original_price = #{record.originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.listPrice != null">
        list_price = #{record.listPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.minimumQuantity != null">
        minimum_quantity = #{record.minimumQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.expressFreight != null">
        express_freight = #{record.expressFreight,jdbcType=DECIMAL},
      </if>
      <if test="record.pictureUrls != null">
        picture_urls = #{record.pictureUrls,jdbcType=VARCHAR},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.perPersonLimit != null">
        per_person_limit = #{record.perPersonLimit,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null">
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.goodsStatus != null">
        goods_status = #{record.goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_goods
    set id = #{record.id,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_category_id = #{record.goodsCategoryId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      is_more_spec = #{record.isMoreSpec,jdbcType=BIT},
      spec_value = #{record.specValue,jdbcType=VARCHAR},
      original_price = #{record.originalPrice,jdbcType=DECIMAL},
      list_price = #{record.listPrice,jdbcType=DECIMAL},
      minimum_quantity = #{record.minimumQuantity,jdbcType=INTEGER},
      inventory = #{record.inventory,jdbcType=INTEGER},
      express_freight = #{record.expressFreight,jdbcType=DECIMAL},
      picture_urls = #{record.pictureUrls,jdbcType=VARCHAR},
      sales = #{record.sales,jdbcType=INTEGER},
      per_person_limit = #{record.perPersonLimit,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      goods_status = #{record.goodsStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suyan.mall.goods.model.Goods">
    update tb_goods
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsCategoryId != null">
        goods_category_id = #{goodsCategoryId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="isMoreSpec != null">
        is_more_spec = #{isMoreSpec,jdbcType=BIT},
      </if>
      <if test="specValue != null">
        spec_value = #{specValue,jdbcType=VARCHAR},
      </if>
      <if test="originalPrice != null">
        original_price = #{originalPrice,jdbcType=DECIMAL},
      </if>
      <if test="listPrice != null">
        list_price = #{listPrice,jdbcType=DECIMAL},
      </if>
      <if test="minimumQuantity != null">
        minimum_quantity = #{minimumQuantity,jdbcType=INTEGER},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="expressFreight != null">
        express_freight = #{expressFreight,jdbcType=DECIMAL},
      </if>
      <if test="pictureUrls != null">
        picture_urls = #{pictureUrls,jdbcType=VARCHAR},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="perPersonLimit != null">
        per_person_limit = #{perPersonLimit,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        goods_status = #{goodsStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suyan.mall.goods.model.Goods">
    update tb_goods
    set shop_id = #{shopId,jdbcType=BIGINT},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_category_id = #{goodsCategoryId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      is_more_spec = #{isMoreSpec,jdbcType=BIT},
      spec_value = #{specValue,jdbcType=VARCHAR},
      original_price = #{originalPrice,jdbcType=DECIMAL},
      list_price = #{listPrice,jdbcType=DECIMAL},
      minimum_quantity = #{minimumQuantity,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      express_freight = #{expressFreight,jdbcType=DECIMAL},
      picture_urls = #{pictureUrls,jdbcType=VARCHAR},
      sales = #{sales,jdbcType=INTEGER},
      per_person_limit = #{perPersonLimit,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      goods_status = #{goodsStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE tb_goods
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_goods
        WHERE id = #{id,jdbcType=BIGINT} 
        AND is_deleted=0
        FOR UPDATE
    </select>
    
    <select id="queryGoods" resultMap="BaseResultMap" parameterType="com.suyan.mall.goods.req.GoodsQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_goods
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="shopId!=null">AND shop_id = #{shopId,jdbcType=BIGINT}</if>
            <if test="shopIdList != null and shopIdList.size > 0">
                <foreach item="item" separator="," open="AND shop_id in (" close=")" collection="shopIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="goodsName!=null and goodsName!=''">AND goods_name = #{goodsName,jdbcType=VARCHAR}</if>
            <if test="goodsNameLike != null and goodsNameLike != '' ">AND goods_name LIKE concat(#{goodsNameLike,jdbcType=VARCHAR},'%')</if>
            <if test="goodsNameList != null and goodsNameList.size > 0">
                <foreach item="item" separator="," open="AND goods_name in (" close=")" collection="goodsNameList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="goodsCategoryId!=null">AND goods_category_id = #{goodsCategoryId,jdbcType=INTEGER}</if>
            <if test="goodsCategoryIdList != null and goodsCategoryIdList.size > 0">
                <foreach item="item" separator="," open="AND goods_category_id in (" close=")" collection="goodsCategoryIdList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="brandId!=null">AND brand_id = #{brandId,jdbcType=INTEGER}</if>
            <if test="brandIdList != null and brandIdList.size > 0">
                <foreach item="item" separator="," open="AND brand_id in (" close=")" collection="brandIdList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="isMoreSpec!=null">AND is_more_spec = #{isMoreSpec,jdbcType=BOOLEAN}</if>
            <if test="isMoreSpecList != null and isMoreSpecList.size > 0">
                <foreach item="item" separator="," open="AND is_more_spec in (" close=")" collection="isMoreSpecList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
            <if test="originalPriceFrom != null"><![CDATA[AND original_price >= #{originalPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="originalPriceTo != null"><![CDATA[AND original_price <= #{originalPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="listPriceFrom != null"><![CDATA[AND list_price >= #{listPriceFrom,jdbcType=DECIMAL}]]></if>
            <if test="listPriceTo != null"><![CDATA[AND list_price <= #{listPriceTo,jdbcType=DECIMAL}]]></if>
            <if test="minimumQuantity!=null">AND minimum_quantity = #{minimumQuantity,jdbcType=INTEGER}</if>
            <if test="minimumQuantityList != null and minimumQuantityList.size > 0">
                <foreach item="item" separator="," open="AND minimum_quantity in (" close=")" collection="minimumQuantityList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="inventory!=null">AND inventory = #{inventory,jdbcType=INTEGER}</if>
            <if test="inventoryList != null and inventoryList.size > 0">
                <foreach item="item" separator="," open="AND inventory in (" close=")" collection="inventoryList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="expressFreightFrom != null"><![CDATA[AND express_freight >= #{expressFreightFrom,jdbcType=DECIMAL}]]></if>
            <if test="expressFreightTo != null"><![CDATA[AND express_freight <= #{expressFreightTo,jdbcType=DECIMAL}]]></if>
            <if test="sales!=null">AND sales = #{sales,jdbcType=INTEGER}</if>
            <if test="salesList != null and salesList.size > 0">
                <foreach item="item" separator="," open="AND sales in (" close=")" collection="salesList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="perPersonLimit!=null">AND per_person_limit = #{perPersonLimit,jdbcType=INTEGER}</if>
            <if test="perPersonLimitList != null and perPersonLimitList.size > 0">
                <foreach item="item" separator="," open="AND per_person_limit in (" close=")" collection="perPersonLimitList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="viewCount!=null">AND view_count = #{viewCount,jdbcType=INTEGER}</if>
            <if test="viewCountList != null and viewCountList.size > 0">
                <foreach item="item" separator="," open="AND view_count in (" close=")" collection="viewCountList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="goodsStatus!=null">AND goods_status = #{goodsStatus,jdbcType=TINYINT}</if>
            <if test="goodsStatusList != null and goodsStatusList.size > 0">
                <foreach item="item" separator="," open="AND goods_status in (" close=")" collection="goodsStatusList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">#{item,jdbcType=BOOLEAN}</foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        <trim prefix="insert into tb_goods (" suffix=") values" suffixOverrides=",">
            shop_id,
            goods_name,
            goods_category_id,
            brand_id,
            is_more_spec,
            spec_value,
            original_price,
            list_price,
            minimum_quantity,
            inventory,
            express_freight,
            picture_urls,
            sales,
            per_person_limit,
            view_count,
            goods_status,
        </trim>
        <foreach collection="modelList" item="bean" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
            #{bean.shopId,jdbcType=BIGINT} ,
            #{bean.goodsName,jdbcType=VARCHAR} ,
            #{bean.goodsCategoryId,jdbcType=INTEGER} ,
            #{bean.brandId,jdbcType=INTEGER} ,
            #{bean.isMoreSpec,jdbcType=BOOLEAN} ,
            #{bean.specValue,jdbcType=VARCHAR} ,
            #{bean.originalPrice,jdbcType=DECIMAL} ,
            #{bean.listPrice,jdbcType=DECIMAL} ,
            #{bean.minimumQuantity,jdbcType=INTEGER} ,
            #{bean.inventory,jdbcType=INTEGER} ,
            #{bean.expressFreight,jdbcType=DECIMAL} ,
            #{bean.pictureUrls,jdbcType=VARCHAR} ,
            #{bean.sales,jdbcType=INTEGER} ,
            #{bean.perPersonLimit,jdbcType=INTEGER} ,
            #{bean.viewCount,jdbcType=INTEGER} ,
            #{bean.goodsStatus,jdbcType=TINYINT} ,
            </trim>
        </foreach>
    </insert>


</mapper>