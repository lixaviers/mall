<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.mall.goods.dao.GoodsPictureMapper">
    <resultMap id="BaseResultMap" type="com.suyan.mall.goods.model.GoodsPicture">
    <id column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="picture_address" jdbcType="VARCHAR" property="pictureAddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, picture_address
  </sql>
  <select id="selectByExample" parameterType="com.suyan.mall.goods.model.GoodsPictureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_goods_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_goods_picture
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_goods_picture
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.suyan.mall.goods.model.GoodsPictureExample">
    delete from tb_goods_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyan.mall.goods.model.GoodsPicture">
    insert into tb_goods_picture (goods_id, picture_address)
    values (#{goodsId,jdbcType=BIGINT}, #{pictureAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.suyan.mall.goods.model.GoodsPicture">
    insert into tb_goods_picture
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="pictureAddress != null">
        picture_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="pictureAddress != null">
        #{pictureAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyan.mall.goods.model.GoodsPictureExample" resultType="java.lang.Long">
    select count(*) from tb_goods_picture
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_goods_picture
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=BIGINT},
      </if>
      <if test="record.pictureAddress != null">
        picture_address = #{record.pictureAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_goods_picture
    set goods_id = #{record.goodsId,jdbcType=BIGINT},
      picture_address = #{record.pictureAddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suyan.mall.goods.model.GoodsPicture">
    update tb_goods_picture
    <set>
      <if test="pictureAddress != null">
        picture_address = #{pictureAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suyan.mall.goods.model.GoodsPicture">
    update tb_goods_picture
    set picture_address = #{pictureAddress,jdbcType=VARCHAR}
    where goods_id = #{goodsId,jdbcType=BIGINT}
  </update>



    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_goods_picture
        WHERE goods_id = #{goodsId,jdbcType=BIGINT} 
        FOR UPDATE
    </select>
    
    <select id="queryGoodsPicture" resultMap="BaseResultMap" parameterType="com.suyan.mall.goods.req.GoodsPictureQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_goods_picture
        <where>
            <if test="goodsId!=null">AND goods_id = #{goodsId,jdbcType=BIGINT}</if>
            <if test="goodsIdList != null and goodsIdList.size > 0">
                <foreach item="item" separator="," open="AND goods_id in (" close=")" collection="goodsIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="pictureAddress!=null and pictureAddress!=''">AND picture_address = #{pictureAddress,jdbcType=VARCHAR}</if>
            <if test="pictureAddressLike != null and pictureAddressLike != '' ">AND picture_address LIKE concat(#{pictureAddressLike,jdbcType=VARCHAR},'%')</if>
            <if test="pictureAddressList != null and pictureAddressList.size > 0">
                <foreach item="item" separator="," open="AND picture_address in (" close=")" collection="pictureAddressList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        <trim prefix="insert into tb_goods_picture (" suffix=") values" suffixOverrides=",">
            goods_id,
            picture_address        </trim>
        <foreach collection="modelList" item="bean" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
            #{bean.goodsId,jdbcType=BIGINT} ,
            #{bean.pictureAddress,jdbcType=VARCHAR}             </trim>
        </foreach>
    </insert>


</mapper>