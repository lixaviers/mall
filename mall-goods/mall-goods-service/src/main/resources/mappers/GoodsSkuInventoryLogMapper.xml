<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.mall.goods.dao.GoodsSkuInventoryLogMapper">
    <resultMap id="BaseResultMap" type="com.suyan.mall.goods.model.GoodsSkuInventoryLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_sku_code" jdbcType="VARCHAR" property="goodsSkuCode" />
    <result column="inventory_way" jdbcType="TINYINT" property="inventoryWay" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="log_type" jdbcType="TINYINT" property="logType" />
    <result column="associated_id" jdbcType="BIGINT" property="associatedId" />
    <result column="associated_desc" jdbcType="VARCHAR" property="associatedDesc" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_sku_code, inventory_way, inventory, log_type, associated_id, associated_desc, 
    remark, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_goods_sku_inventory_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_goods_sku_inventory_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_goods_sku_inventory_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLogExample">
    delete from tb_goods_sku_inventory_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods_sku_inventory_log (goods_sku_code, inventory_way, inventory, 
      log_type, associated_id, associated_desc, 
      remark, create_time, update_time
      )
    values (#{goodsSkuCode,jdbcType=VARCHAR}, #{inventoryWay,jdbcType=TINYINT}, #{inventory,jdbcType=INTEGER}, 
      #{logType,jdbcType=TINYINT}, #{associatedId,jdbcType=BIGINT}, #{associatedDesc,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      select LAST_INSERT_ID()
    </selectKey>
    insert into tb_goods_sku_inventory_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsSkuCode != null">
        goods_sku_code,
      </if>
      <if test="inventoryWay != null">
        inventory_way,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
      <if test="logType != null">
        log_type,
      </if>
      <if test="associatedId != null">
        associated_id,
      </if>
      <if test="associatedDesc != null">
        associated_desc,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsSkuCode != null">
        #{goodsSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="inventoryWay != null">
        #{inventoryWay,jdbcType=TINYINT},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="logType != null">
        #{logType,jdbcType=TINYINT},
      </if>
      <if test="associatedId != null">
        #{associatedId,jdbcType=BIGINT},
      </if>
      <if test="associatedDesc != null">
        #{associatedDesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLogExample" resultType="java.lang.Long">
    select count(*) from tb_goods_sku_inventory_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_goods_sku_inventory_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsSkuCode != null">
        goods_sku_code = #{record.goodsSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="record.inventoryWay != null">
        inventory_way = #{record.inventoryWay,jdbcType=TINYINT},
      </if>
      <if test="record.inventory != null">
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.logType != null">
        log_type = #{record.logType,jdbcType=TINYINT},
      </if>
      <if test="record.associatedId != null">
        associated_id = #{record.associatedId,jdbcType=BIGINT},
      </if>
      <if test="record.associatedDesc != null">
        associated_desc = #{record.associatedDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_goods_sku_inventory_log
    set id = #{record.id,jdbcType=BIGINT},
      goods_sku_code = #{record.goodsSkuCode,jdbcType=VARCHAR},
      inventory_way = #{record.inventoryWay,jdbcType=TINYINT},
      inventory = #{record.inventory,jdbcType=INTEGER},
      log_type = #{record.logType,jdbcType=TINYINT},
      associated_id = #{record.associatedId,jdbcType=BIGINT},
      associated_desc = #{record.associatedDesc,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLog">
    update tb_goods_sku_inventory_log
    <set>
      <if test="goodsSkuCode != null">
        goods_sku_code = #{goodsSkuCode,jdbcType=VARCHAR},
      </if>
      <if test="inventoryWay != null">
        inventory_way = #{inventoryWay,jdbcType=TINYINT},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="logType != null">
        log_type = #{logType,jdbcType=TINYINT},
      </if>
      <if test="associatedId != null">
        associated_id = #{associatedId,jdbcType=BIGINT},
      </if>
      <if test="associatedDesc != null">
        associated_desc = #{associatedDesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suyan.mall.goods.model.GoodsSkuInventoryLog">
    update tb_goods_sku_inventory_log
    set goods_sku_code = #{goodsSkuCode,jdbcType=VARCHAR},
      inventory_way = #{inventoryWay,jdbcType=TINYINT},
      inventory = #{inventory,jdbcType=INTEGER},
      log_type = #{logType,jdbcType=TINYINT},
      associated_id = #{associatedId,jdbcType=BIGINT},
      associated_desc = #{associatedDesc,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>



    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM tb_goods_sku_inventory_log
        WHERE id = #{id,jdbcType=BIGINT} 
        FOR UPDATE
    </select>
    
    <select id="queryGoodsSkuInventoryLog" resultMap="BaseResultMap" parameterType="com.suyan.mall.goods.req.GoodsSkuInventoryLogQueryDTO">
        SELECT
         <choose>
          <when test="returnFields!=null">${returnFields}</when>
          <otherwise>
            <include refid="Base_Column_List" />
          </otherwise>
        </choose>
        FROM tb_goods_sku_inventory_log
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=BIGINT}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="goodsSkuCode!=null and goodsSkuCode!=''">AND goods_sku_code = #{goodsSkuCode,jdbcType=VARCHAR}</if>
            <if test="goodsSkuCodeLike != null and goodsSkuCodeLike != '' ">AND goods_sku_code LIKE concat(#{goodsSkuCodeLike,jdbcType=VARCHAR},'%')</if>
            <if test="goodsSkuCodeList != null and goodsSkuCodeList.size > 0">
                <foreach item="item" separator="," open="AND goods_sku_code in (" close=")" collection="goodsSkuCodeList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="inventoryWay!=null">AND inventory_way = #{inventoryWay,jdbcType=TINYINT}</if>
            <if test="inventoryWayList != null and inventoryWayList.size > 0">
                <foreach item="item" separator="," open="AND inventory_way in (" close=")" collection="inventoryWayList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="inventory!=null">AND inventory = #{inventory,jdbcType=INTEGER}</if>
            <if test="inventoryList != null and inventoryList.size > 0">
                <foreach item="item" separator="," open="AND inventory in (" close=")" collection="inventoryList">#{item,jdbcType=INTEGER}</foreach>
            </if>
            <if test="logType!=null">AND log_type = #{logType,jdbcType=TINYINT}</if>
            <if test="logTypeList != null and logTypeList.size > 0">
                <foreach item="item" separator="," open="AND log_type in (" close=")" collection="logTypeList">#{item,jdbcType=TINYINT}</foreach>
            </if>
            <if test="associatedId!=null">AND associated_id = #{associatedId,jdbcType=BIGINT}</if>
            <if test="associatedIdList != null and associatedIdList.size > 0">
                <foreach item="item" separator="," open="AND associated_id in (" close=")" collection="associatedIdList">#{item,jdbcType=BIGINT}</foreach>
            </if>
            <if test="associatedDesc!=null and associatedDesc!=''">AND associated_desc = #{associatedDesc,jdbcType=VARCHAR}</if>
            <if test="associatedDescLike != null and associatedDescLike != '' ">AND associated_desc LIKE concat(#{associatedDescLike,jdbcType=VARCHAR},'%')</if>
            <if test="associatedDescList != null and associatedDescList.size > 0">
                <foreach item="item" separator="," open="AND associated_desc in (" close=")" collection="associatedDescList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="remark!=null and remark!=''">AND remark = #{remark,jdbcType=VARCHAR}</if>
            <if test="remarkLike != null and remarkLike != '' ">AND remark LIKE concat(#{remarkLike,jdbcType=VARCHAR},'%')</if>
            <if test="remarkList != null and remarkList.size > 0">
                <foreach item="item" separator="," open="AND remark in (" close=")" collection="remarkList">#{item,jdbcType=VARCHAR}</foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        <trim prefix="insert into tb_goods_sku_inventory_log (" suffix=") values" suffixOverrides=",">
            goods_sku_code,
            inventory_way,
            inventory,
            log_type,
            associated_id,
            associated_desc,
            remark,
        </trim>
        <foreach collection="modelList" item="bean" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
            #{bean.goodsSkuCode,jdbcType=VARCHAR} ,
            #{bean.inventoryWay,jdbcType=TINYINT} ,
            #{bean.inventory,jdbcType=INTEGER} ,
            #{bean.logType,jdbcType=TINYINT} ,
            #{bean.associatedId,jdbcType=BIGINT} ,
            #{bean.associatedDesc,jdbcType=VARCHAR} ,
            #{bean.remark,jdbcType=VARCHAR} ,
            </trim>
        </foreach>
    </insert>


</mapper>