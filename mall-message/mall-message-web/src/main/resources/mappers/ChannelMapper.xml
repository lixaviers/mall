<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suyan.mall.message.dao.ChannelMapper">
    <resultMap id="BaseResultMap" type="com.suyan.mall.message.model.Channel">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="channel_code" jdbcType="VARCHAR" property="channelCode"/>
        <result column="channel_name" jdbcType="VARCHAR" property="channelName"/>
        <result column="contact_name" jdbcType="VARCHAR" property="contactName"/>
        <result column="secret_key" jdbcType="VARCHAR" property="secretKey"/>
        <result column="support_type" jdbcType="VARCHAR" property="supportType"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, channel_code, channel_name, contact_name, secret_key, support_type, remark, create_time, 
    create_user, create_user_name, update_time, is_deleted
  </sql>
    <select id="selectByExample" parameterType="com.suyan.mall.message.model.ChannelExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from sms_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sms_channel
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sms_channel
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.suyan.mall.message.model.ChannelExample">
        delete from sms_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.suyan.mall.message.model.Channel">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID()
        </selectKey>
        insert into sms_channel (channel_code, channel_name, contact_name,
        secret_key, support_type, remark,
        create_time, create_user, create_user_name,
        update_time, is_deleted)
        values (#{channelCode,jdbcType=VARCHAR}, #{channelName,jdbcType=VARCHAR}, #{contactName,jdbcType=VARCHAR},
        #{secretKey,jdbcType=VARCHAR}, #{supportType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR},
        #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR},
        #{isDeleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.suyan.mall.message.model.Channel">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID()
        </selectKey>
        insert into sms_channel
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="channelCode != null">
                channel_code,
            </if>
            <if test="channelName != null">
                channel_name,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="secretKey != null">
                secret_key,
            </if>
            <if test="supportType != null">
                support_type,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createUserName != null">
                create_user_name,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="channelCode != null">
                #{channelCode,jdbcType=VARCHAR},
            </if>
            <if test="channelName != null">
                #{channelName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="secretKey != null">
                #{secretKey,jdbcType=VARCHAR},
            </if>
            <if test="supportType != null">
                #{supportType,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateUserName != null">
                #{updateUserName,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.suyan.mall.message.model.ChannelExample" resultType="java.lang.Long">
        select count(*) from sms_channel
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sms_channel
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.channelCode != null">
                channel_code = #{record.channelCode,jdbcType=VARCHAR},
            </if>
            <if test="record.channelName != null">
                channel_name = #{record.channelName,jdbcType=VARCHAR},
            </if>
            <if test="record.contactName != null">
                contact_name = #{record.contactName,jdbcType=VARCHAR},
            </if>
            <if test="record.secretKey != null">
                secret_key = #{record.secretKey,jdbcType=VARCHAR},
            </if>
            <if test="record.supportType != null">
                support_type = #{record.supportType,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createUserName != null">
                create_user_name = #{record.createUserName,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sms_channel
        set id = #{record.id,jdbcType=INTEGER},
        channel_code = #{record.channelCode,jdbcType=VARCHAR},
        channel_name = #{record.channelName,jdbcType=VARCHAR},
        contact_name = #{record.contactName,jdbcType=VARCHAR},
        secret_key = #{record.secretKey,jdbcType=VARCHAR},
        support_type = #{record.supportType,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        is_deleted = #{record.isDeleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.suyan.mall.message.model.Channel">
        update sms_channel
        <set>
            <if test="channelCode != null">
                channel_code = #{channelCode,jdbcType=VARCHAR},
            </if>
            <if test="channelName != null">
                channel_name = #{channelName,jdbcType=VARCHAR},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="secretKey != null">
                secret_key = #{secretKey,jdbcType=VARCHAR},
            </if>
            <if test="supportType != null">
                support_type = #{supportType,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                create_user_name = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.suyan.mall.message.model.Channel">
    update sms_channel
    set channel_code = #{channelCode,jdbcType=VARCHAR},
      channel_name = #{channelName,jdbcType=VARCHAR},
      contact_name = #{contactName,jdbcType=VARCHAR},
      secret_key = #{secretKey,jdbcType=VARCHAR},
      support_type = #{supportType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <update id="logicalDeleteByPrimaryKey">
        UPDATE sms_channel
        SET
            is_deleted=1
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKeyForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sms_channel
        WHERE id = #{id,jdbcType=INTEGER}
        AND is_deleted=0
        FOR UPDATE
    </select>

    <select id="queryChannel" resultMap="BaseResultMap" parameterType="com.suyan.mall.message.req.ChannelQueryDTO">
        SELECT
        <choose>
            <when test="returnFields!=null">${returnFields}</when>
            <otherwise>
                <include refid="Base_Column_List"/>
            </otherwise>
        </choose>
        FROM sms_channel
        <where>
            <if test="id!=null">AND id = #{id,jdbcType=INTEGER}</if>
            <if test="idList != null and idList.size > 0">
                <foreach item="item" separator="," open="AND id in (" close=")" collection="idList">
                    #{item,jdbcType=INTEGER}
                </foreach>
            </if>
            <if test="channelCode!=null and channelCode!=''">AND channel_code = #{channelCode,jdbcType=VARCHAR}</if>
            <if test="channelCodeLike != null and channelCodeLike != '' ">AND channel_code LIKE
                concat(#{channelCodeLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="channelCodeList != null and channelCodeList.size > 0">
                <foreach item="item" separator="," open="AND channel_code in (" close=")" collection="channelCodeList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="channelName!=null and channelName!=''">AND channel_name = #{channelName,jdbcType=VARCHAR}</if>
            <if test="channelNameLike != null and channelNameLike != '' ">AND channel_name LIKE
                concat(#{channelNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="channelNameList != null and channelNameList.size > 0">
                <foreach item="item" separator="," open="AND channel_name in (" close=")" collection="channelNameList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="contactName!=null and contactName!=''">AND contact_name = #{contactName,jdbcType=VARCHAR}</if>
            <if test="contactNameLike != null and contactNameLike != '' ">AND contact_name LIKE
                concat(#{contactNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="contactNameList != null and contactNameList.size > 0">
                <foreach item="item" separator="," open="AND contact_name in (" close=")" collection="contactNameList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="secretKey!=null and secretKey!=''">AND secret_key = #{secretKey,jdbcType=VARCHAR}</if>
            <if test="secretKeyLike != null and secretKeyLike != '' ">AND secret_key LIKE
                concat(#{secretKeyLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="secretKeyList != null and secretKeyList.size > 0">
                <foreach item="item" separator="," open="AND secret_key in (" close=")" collection="secretKeyList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="supportType!=null and supportType!=''">AND support_type = #{supportType,jdbcType=VARCHAR}</if>
            <if test="supportTypeLike != null and supportTypeLike != '' ">AND support_type LIKE
                concat(#{supportTypeLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="supportTypeList != null and supportTypeList.size > 0">
                <foreach item="item" separator="," open="AND support_type in (" close=")" collection="supportTypeList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="remark!=null and remark!=''">AND remark = #{remark,jdbcType=VARCHAR}</if>
            <if test="remarkLike != null and remarkLike != '' ">AND remark LIKE
                concat(#{remarkLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="remarkList != null and remarkList.size > 0">
                <foreach item="item" separator="," open="AND remark in (" close=")" collection="remarkList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="createTimeFrom != null"><![CDATA[AND create_time >= #{createTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="createTimeTo != null"><![CDATA[AND create_time <= #{createTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="createUser!=null and createUser!=''">AND create_user = #{createUser,jdbcType=VARCHAR}</if>
            <if test="createUserLike != null and createUserLike != '' ">AND create_user LIKE
                concat(#{createUserLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="createUserList != null and createUserList.size > 0">
                <foreach item="item" separator="," open="AND create_user in (" close=")" collection="createUserList">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="createUserName!=null and createUserName!=''">AND create_user_name =
                #{createUserName,jdbcType=VARCHAR}
            </if>
            <if test="createUserNameLike != null and createUserNameLike != '' ">AND create_user_name LIKE
                concat(#{createUserNameLike,jdbcType=VARCHAR},'%')
            </if>
            <if test="createUserNameList != null and createUserNameList.size > 0">
                <foreach item="item" separator="," open="AND create_user_name in (" close=")"
                         collection="createUserNameList">#{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="updateTimeFrom != null"><![CDATA[AND update_time >= #{updateTimeFrom,jdbcType=TIMESTAMP}]]></if>
            <if test="updateTimeTo != null"><![CDATA[AND update_time <= #{updateTimeTo,jdbcType=TIMESTAMP}]]></if>
            <if test="isDeleted!=null">AND is_deleted = #{isDeleted,jdbcType=BOOLEAN}</if>
            <if test="isDeletedList != null and isDeletedList.size > 0">
                <foreach item="item" separator="," open="AND is_deleted in (" close=")" collection="isDeletedList">
                    #{item,jdbcType=BOOLEAN}
                </foreach>
            </if>
        </where>
        <choose>
            <when test="orderBy!=null and orderBy!=''">order by ${orderBy}</when>
            <otherwise>order by id</otherwise>
        </choose>
    </select>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into sms_channel (
        channel_code,
        channel_name,
        contact_name,
        secret_key,
        support_type,
        remark,
        create_user,
        create_user_name
        )
        values
        <foreach collection="modelList" item="bean" index="index" separator=",">
            (
            #{bean.channelCode,jdbcType=VARCHAR} ,
            #{bean.channelName,jdbcType=VARCHAR} ,
            #{bean.contactName,jdbcType=VARCHAR} ,
            #{bean.secretKey,jdbcType=VARCHAR} ,
            #{bean.supportType,jdbcType=VARCHAR} ,
            #{bean.remark,jdbcType=VARCHAR} ,
            #{bean.createUser,jdbcType=VARCHAR} ,
            #{bean.createUserName,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="selectByChannelCode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sms_channel
        WHERE channel_code = #{channelCode,jdbcType=VARCHAR}
        AND is_deleted = 0
    </select>

</mapper>